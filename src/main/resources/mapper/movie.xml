<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tenco.indiepicter.movie.MovieRepository">

<!-- admin 페이지 온라인 오픈기간 설정 : movieId로 영화 조회 -->
    <select id="findById" resultType="com.tenco.indiepicter.movie.response.OnlineStreamingDateSettingDTO">
        select * from movie_tb where id = #{id}
    </select>

<!-- admin 페이지 오프라인 오픈기간 설정 : movieId로 영화 조회 -->
    <select id="findByIdOffline" resultType="com.tenco.indiepicter.movie.response.OfflineStreamingDateSettingDTO">
        select mt.id, mt.movie_name, mt.offline_release_date, mt.offline_end_date, ft.end_date from movie_tb mt join funding_tb ft on mt.id = ft.movie_id where mt.id = #{id}
    </select>


<!--    useGeneratedKeys="true" keyProperty="id" parameterType="Integer"-->
    <insert id="saveMovie" useGeneratedKeys="true" keyProperty="id">
        insert into movie_tb(make_year, production, movie_name, synopsis, thumbnail, directing_intension, genre, running_grade,
                             director, director_pic, actor, director_careers, director_awards_film, online_release_date, online_end_date,
                             offline_release_date, offline_end_date, d_day) values (#{makeYear}, #{production}, #{movieName},#{synopsis}, #{thumbnail},
                                                                                    #{directingIntension}, #{genre}, #{runningGrade}, #{director}, #{directorPic},
                                                                                    #{actor}, #{directorCareers}, #{directorAwardsFilm}, #{onlineReleaseDate},
                                                                                    #{onlineEndDate}, #{offlineReleaseDate}, #{offlineEndDate}, #{dDay})
    </insert>

    <!-- 온라인 상영 영화 정보 및 무비 파일 조회 -->
    <select id="findByMovieIdToMovie" resultMap="OnMovieDetailDTOResultMap">
        select
            ft.id as funding_id,
            mt.id as movie_id,
            mt.movie_name,
            mt.thumbnail,
            mt.director,
            mt.genre,
            mt.running_grade,
            mt.online_release_date,
            mt.online_end_date,
            mt.synopsis,
            mft.path as movie_path
        from movie_tb as mt
                 inner join movie_file_tb as mft
                            on mt.id = mft.movie_id
                 inner join funding_tb as ft
                            on mt.id = ft.movie_id
        where
            mt.id = #{movieId}
    </select>
    <resultMap id="OnMovieDetailDTOResultMap" type="com.tenco.indiepicter.movie.response.OnMovieDetailDTO">
        <result property="fundingId" column="funding_id"/>
        <result property="movieId" column="movie_id"/>
        <result property="thumbnail" column="thumbnail"/>
        <result property="director" column="director"/>
        <result property="runningGrade" column="running_grade"/>
        <result property="genre" column="genre"/>
        <result property="onlineReleaseDate" column="online_release_date"/>
        <result property="onlineEndDate" column="online_end_date"/>
        <result property="moviePath" column="movie_path"/>
        <result property="synopsis" column="synopsis"/>
        <result property="moviePath" column="movie_path"/>
    </resultMap>

    <!-- 온라인 상영 영화 오픈 시간 및 채팅시간 설정 -->
    <update id="updateMovieOpenDate">
        update movie_tb set online_release_date = #{onlineReleaseDate}, online_end_date = #{onlineEndDate}, chat_time = #{chatTime}
        where id = #{id}
    </update>

    <!-- 오프라인 상영 기간 설정 -->
    <update id="updateOffMovieOpenDate">
        update movie_tb set offline_release_date = #{offlineReleaseDate}, offline_end_date = #{offlineEndDate}
        where id = #{id}
    </update>

    <!-- 어드민 페이지 펀딩 수정페이지 영화 수정 -->
    <update id="updateById">
        update movie_tb set make_year = #{makeYear}, production = #{production}, movie_name = #{movieName}, sysnopsis = #{synopsis},
                            thumbnail = #{thumbnail}, directing_intension = #{directingIntension}, genre = #{genre}, running_grade = #{runningGrade},
                            director = #{director}, director_pic = #{directorPic}, actor = #{actor}, director_careers = #{directorCareers},
                            director_awards_film = #{directorAwardsFilm}, online_release_date = #{onlineReleaseDate}, offline_end_date = #{offlineEndDate},
                            d_day = #{dDAy} where id = #{movieId}
    </update>

</mapper>