<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tenco.indiepicter.runningschedule.RunningScheduleRepository">

    <!-- 오프라인 상영 일정 등록 -->
    <insert id="insert">
        insert into running_schedule_tb (running_time, running_date, start_time, end_time, movie_id, theater_id)
        values (#{runningTime}, #{runningDate}, #{startTime}, #{endTime}, #{movieId}, #{theaterId})
    </insert>

    <!-- 오프라인 상영 일정 수정 -->
    <update id="updateById">
        update running_schedule_tb set
        running_time = #{runningTime}, running_date = #{runningDate}, start_time = #{startTime}, end_time = #{endTime}, movie_id = #{movieId}, theater_id = #{theaterId},
        where id = #{id}
    </update>

    <!-- 오프라인 상영 일정 삭제 -->
    <delete id="deleteById">
        delete from running_schedule_tb where id = #{id}
    </delete>

    <!-- 특정 영화와 특정 날짜의 오프라인 상영 일정 조회 -->
    <select id="findByMovieIdAndRunningDate" resultType="com.tenco.indiepicter.runningschedule.RunningScheduleResponse.selectDayDTO" resultMap="selectDayDTO">
        SELECT
            r.id as running_schedule_id,
            m.movie_name,
            m.running_grade,
            r.running_date,
            r.start_time,
            r.end_time,
            COUNT(s.seat_name) AS exist_seats,
            t.total_seat
        FROM
            running_schedule_tb AS r
                INNER JOIN
            movie_tb AS m ON r.movie_id = m.id
                INNER JOIN
            theater_tb AS t ON r.theater_id = t.id
                LEFT JOIN
            seat_tb AS s ON r.id = s.running_schedule_id
        WHERE
            r.movie_id = 1 AND r.running_date LIKE '2023-12-24%'
        GROUP BY
            r.id, m.movie_name, r.running_date, r.movie_id, r.theater_id, t.total_seat
        ORDER BY
            r.running_date ASC;
    </select>

    <resultMap type="com.tenco.indiepicter.runningschedule.RunningScheduleResponse.selectDayDTO" id="selectDayDTO">
        <id column="running_schedule_id" property="runningDateId" />
        <result column="movie_name" property="movieName" />
        <result column="running_grade" property="runningGrade" />
        <result column="running_date" property="runningDate" />
        <collection property="movieTimeDTO" resultMap="movieTimeDTO" />
    </resultMap>

    <resultMap type="com.tenco.indiepicter.runningschedule.RunningScheduleResponse.selectDayDTO.movieTimeDTO" id="movieTimeDTO">
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
        <result column="exist_seats" property="existSeatCount" />
        <result column="total_seat" property="theaterSeatCount" />
    </resultMap>

    <!-- 특정 영화의 오프라인 상영 일정 기간 조회 -->
    <select id="findByMovieId" resultType="com.tenco.indiepicter.runningschedule.RunningSchedule">
        select running_date, movie_id, theater_id from running_schedule_tb
        where movie_id = 1
        order by running_date asc ;
    </select>

    <!-- 오프라인 상영 일정 전체 조회 -->
    <select id="findAll" resultType="com.tenco.indiepicter.runningschedule.RunningSchedule">
        select * from running_schedule_tb;
    </select>


</mapper>